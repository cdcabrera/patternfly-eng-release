#!/bin/sh

default()
{
  SCRIPT=`basename $0`
  SCRIPT_DIR=`dirname $0`
  SCRIPT_DIR=`cd $SCRIPT_DIR; pwd`

  . $SCRIPT_DIR/../_env.sh
  . $SCRIPT_DIR/../_common.sh
  . $SCRIPT_DIR/_common.sh

  BUILD_DIR=$TRAVIS_BUILD_DIR
}

# Push version bump changes to master branch
#
push_master()
{
  echo "*** Pushing to master"
  cd $BUILD_DIR

  # Note: Changes are committed by release script prior to bower install verification

  # Merge master branch
  git fetch upstream master:master # <remote-branch>:<local-branch>
  git checkout master
  git merge -Xtheirs $TRAVIS_BRANCH-local --no-edit --ff
  check $? "git merge failure"

  # Push to master
  git push upstream master:master
  check $? "git push failure"
}

# Push version bump and generated files to master-dist for tagging release
#
# Note: When run against a tag, TRAVIS_BRANCH won't equal "master", but the tag name. To ensure we push to master-dist,
# don't use TRAVIS_BRANCH here.
#
push_master_dist()
{
  echo "*** Pushing to master-dist"
  cd $BUILD_DIR

  git checkout $TRAVIS_BRANCH-local

  # Commit generated files
  git add dist --force
  git commit -m "Added files generated by Travis build"
  check $? "git commit failure"

  # Push to dist branch
  EXISTING=`git ls-remote --heads https://github.com/$TRAVIS_REPO_SLUG.git master-dist`

  if [ -n "$EXISTING" ]; then
    git fetch upstream master-dist:master-dist # <remote-branch>:<local-branch>
    git checkout master-dist
    git merge -Xtheirs $TRAVIS_BRANCH-local --no-edit --ff
    check $? "git merge failure"

    git push upstream master-dist --force -v
  else
    git push upstream $TRAVIS_BRANCH-local:master-dist --force -v
  fi
  check $? "git push failure"
}

usage()
{
cat <<- EEOOFF

    This script will publish generated files to GitHub.

    Note: Intended for use with Travis only.

    sh [-x] $SCRIPT [-h] -d|m

    Example: sh $SCRIPT

    OPTIONS:
    h       Display this message (default)
    d       Push version bump and generated files to master-dist
    m       Push version bump to master

EEOOFF
}

# main()
{
  default

  if [ "$#" -eq 0 ]; then
    usage
    exit 1
  fi

  while getopts hdm c; do
    case $c in
      h) usage; exit 0;;
      d) PUSH_DIST=1;;
      m) PUSH_MASTER=1;;
      \?) usage; exit 1;;
    esac
  done

  git_setup

  # Push version bump to master
  if [ -n "$PUSH_MASTER" ]; then
    push_master # Push version bump to master
  fi

  # Push version bump and generated files to master-dist
  if [ -n "$PUSH_DIST" ]; then
    push_master_dist
  fi
}
